/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cliente;

import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import servidor.Mensagem;

/**
 *
 * @author Robson Gomes
 */
public class JFrameChat extends javax.swing.JFrame {
    
    //Variaveis globais
    String usuario = "";    
    Socket cSocket = null;
    ObjectOutputStream EnviaServ = null;
    ObjectInputStream RecebServ = null;        
    ThreadCliente t;
    
    /**
     * Creates new form JFrameChat
     * @throws java.io.IOException
     */
    public JFrameChat() throws IOException {
        initComponents();
        initJChat();
    }
    
    
    private void initJChat() throws IOException {
        try {
            jTextInputMensagem.requestFocus();
            cSocket = new Socket("127.0.0.1",7000);                          
            EnviaServ = new ObjectOutputStream(cSocket.getOutputStream());
            RecebServ = new ObjectInputStream(cSocket.getInputStream());                        
            
            usuario = JOptionPane.showInputDialog("Qual o seu nome?");
            jLabelUsuario.setText(usuario);
            System.out.println("Cliente Conectado!!");
            
            t = new ThreadCliente(this, cSocket, EnviaServ, RecebServ, usuario);
            t.start();                        
            
        } catch(HeadlessException ex) {
            System.out.println(ex.getMessage());
        }
    }
    
    
    public void setUsersOnline(String[] users) {
        jListOnline.setModel(new javax.swing.AbstractListModel<String>() {            
            public int getSize() { return users.length; }
            public String getElementAt(int i) { return users[i]; }
        });
    }
    
    public void newMessage(String conteudo, String from, int fromPort) {
        //String dataHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss").format(Calendar.getInstance().getTime());        
        String dataHora = new SimpleDateFormat("HH:mm").format(Calendar.getInstance().getTime());
        String message = from + ": " + conteudo + "\n";
        jTextViewMensagens.setText(jTextViewMensagens.getText() + message);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextViewMensagens = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListOnline = new javax.swing.JList<>();
        jLabelUsuario = new javax.swing.JLabel();
        jTextInputMensagem = new javax.swing.JTextField();

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JChat");
        setAlwaysOnTop(true);
        setResizable(false);

        jTextViewMensagens.setColumns(20);
        jTextViewMensagens.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTextViewMensagens.setRows(5);
        jTextViewMensagens.setEnabled(false);
        jScrollPane1.setViewportView(jTextViewMensagens);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("JChat");

        jListOnline.setBorder(javax.swing.BorderFactory.createTitledBorder("Online"));
        jListOnline.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Feluriana", "Denna", "Eldodin", "Kilvin" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListOnline.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListOnline.setToolTipText("Clique duas vezes para iniciar um Chat privado.");
        jListOnline.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListOnlineMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jListOnline);

        jLabelUsuario.setText("Kvothe");

        jTextInputMensagem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextInputMensagemKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                    .addComponent(jTextInputMensagem))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelUsuario)
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane3))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextInputMensagem, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextInputMensagemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextInputMensagemKeyPressed
        // TODO add your handling code here:
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            // Enter was pressed. Your code goes here.            
            String msg = jTextInputMensagem.getText();            
            Mensagem m = new Mensagem();
            m.setMensagemFoAll(true);
            m.setFrom(usuario);
            m.setFromPort(cSocket.getPort());
            m.setConteudo(msg);
            
            try {            
                EnviaServ.writeObject(m);
                EnviaServ.reset();            
            } catch (IOException ex) {
                Logger.getLogger(JFrameChat.class.getName()).log(Level.SEVERE, null, ex);
            }           
                     
            
            System.out.println("Mensagem: " + msg);
            
            
            jTextInputMensagem.setText("");               
        }
    }//GEN-LAST:event_jTextInputMensagemKeyPressed

    private void jListOnlineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListOnlineMouseClicked
        // TODO add your handling code here:        
         if (evt.getClickCount() == 2) {            
            // Double-click detected
            Mensagem m = new Mensagem();
            int index = jListOnline.locationToIndex(evt.getPoint());
            String userSelected = jListOnline.getSelectedValue();       
            
            m.setFrom(usuario);            
            
            for(Mensagem user : t.getUsersOnline()) {                 
                if(user.getFrom().equalsIgnoreCase(usuario)) {
                   //System.out.println("Achou: " + user.getFromPort());
                   m.setFromPort(user.getFromPort());                   
                }
            }
            
            boolean existe = false;
            for(Mensagem user : t.getUsersOnline()) {                 
                if(user.getFrom().equalsIgnoreCase(userSelected) && user.getPosicaoLista() == index) {
                   //System.out.println("Achou: " + user.getFromPort());
                   m.setTo(userSelected);
                   m.setToPort(user.getFromPort());
                   existe = true;
                }
            }

            if(!m.getTo().isEmpty() && existe) {
                if(!t.existeChat(m)) {                    
                    JFrameChatPrivate jFCPrivate = new JFrameChatPrivate(t, m);
                    t.inserirChatsPrivate(jFCPrivate);            
                    jFCPrivate.setTitle(userSelected + " - " + m.getToPort());
                    jFCPrivate.setVisible(true);
                } else {
                    //maximizar um formulário minimizado
                    t.maximizeFormChatPrivate(m);
                }                
            }            
        }
    }//GEN-LAST:event_jListOnlineMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new JFrameChat().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(JFrameChat.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelUsuario;
    private javax.swing.JList<String> jListOnline;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextInputMensagem;
    private javax.swing.JTextArea jTextViewMensagens;
    // End of variables declaration//GEN-END:variables
}
